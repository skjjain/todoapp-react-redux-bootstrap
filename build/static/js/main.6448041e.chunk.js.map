{"version":3,"sources":["data/actions.js","components/taskItem.js","pages/home.js","components/error_boundry.js","App.js","serviceWorker.js","data/reducers.js","index.js"],"names":["ADD_TODO","REM_TODO","DONE_TODO","LIST_TODO","TaskItem","_this","this","console","log","props","react_default","a","createElement","className","children","style","float","type","Button","marginRight","bsSize","bsStyle","onClick","doneTask","deleteTask","React","Component","Home","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","submitForm","e","preventDefault","onTodoEnter","taskRef","current","value","task","onTaskRemove","onTaskDone","getValidationState","errorInfo","error","renderTodos","todos","arguments","length","undefined","ListGroup","map","todo","taskItem_TaskItem","key","createRef","onSubmit","FormGroup","validationState","FormControl","autoFocus","inputRef","placeholder","Feedback","HelpBlock","todos_completed","connect","state","objectSpread","todoActions","dispatch","text","payload","addTodo","doneTodo","ErrorBoundary","setState","whiteSpace","toString","componentStack","App","error_boundry_ErrorBoundary","home","Boolean","window","location","hostname","match","initialState","todoApp","combineReducers","action","newState","indexOf","concat","toConsumableArray","filter","i","store","createStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6448041e.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO';\nexport const REM_TODO = 'REM_TODO';\nexport const DONE_TODO = 'DONE_TODO';\nexport const LIST_TODO = 'LIST_TODO';\n\n\nexport function addTodo(text){\n    return {\n        type:ADD_TODO,\n        payload: text\n    };\n}\n\nexport function removeTodo(obj){\n    return {\n        type:REM_TODO,\n        payload: obj\n    };\n}\n\nexport function doneTodo(text){\n    return {\n        type:DONE_TODO,\n        payload: text\n    };\n}\n\nexport function getTaskList(){\n    return {\n        type:LIST_TODO,\n        payload: true\n    };\n}\n","import React from 'react';\nimport {Button} from 'react-bootstrap';\n\nexport default class TaskItem extends React.Component{\n    render() {\n        console.log(this.props);\n        return (\n            <li className=\"list-group-item\">\n              {this.props.children}\n              <div style={{float:'right'}}>\n              {this.props.type == 'pending' ? <Button style={{marginRight:'5pt'}} bsSize=\"xsmall\" bsStyle=\"success\"  onClick={() => this.props.doneTask(this.props.children)}>Done</Button> : ''}\n              <Button style={{marginRight:'5pt'}} bsSize=\"xsmall\" bsStyle=\"danger\" onClick={() => this.props.deleteTask(this.props.children, this.props.type)}>Delete</Button>\n              </div>\n            </li>\n          );\n    }\n}\n","import React, { Component } from 'react';\nimport { FormGroup, FormControl, ListGroup, ListGroupItem, HelpBlock } from 'react-bootstrap';\nimport {connect} from 'react-redux';\nimport {addTodo, removeTodo, doneTodo} from '../data/actions';\nimport TaskItem from '../components/taskItem';\n\n\n\nclass Home extends Component{\n\n    constructor(props){\n        super(props);\n        this.taskRef = React.createRef();\n    }\n\n    submitForm = (e) => {\n        e.preventDefault();\n        this.props.onTodoEnter(this.taskRef.current.value);\n        this.taskRef.current.value = \"\";\n    }\n\n\n    deleteTask = (task, type) => {\n        console.log(task);\n        this.props.onTaskRemove(task, type);\n    }\n\n    doneTask = (task) => {\n        console.log(task);\n        this.props.onTaskDone(task);\n    }\n\n    getValidationState = () => {\n        if(this.props.errorInfo == ''){\n            return null;\n        }\n        return this.props.error ? 'error':'success';\n    }\n\n\n\n    renderTodos = (todos, type = 'pending') => {\n        if(todos.length == 0){\n            if(type == 'pending'){\n                return (\"No task added!!!\");\n            }else{\n                return (\"No task completed yet!!!\");\n            }\n        }\n        return (<ListGroup>\n            {todos.map((todo) => (<TaskItem type={type} key={todo} deleteTask={this.deleteTask} doneTask={this.doneTask}>{todo}</TaskItem>))}\n        </ListGroup>);\n    }\n\n    render(){\n        \n        return (\n            <div>\n                <form className=\"form\" onSubmit={this.submitForm}>\n                    <FormGroup validationState={this.getValidationState()}>\n                        <FormControl autoFocus  inputRef={this.taskRef}  type=\"text\" placeholder=\"Enter some task here...\"/>  \n                        <FormControl.Feedback />\n                        <HelpBlock>{this.props.errorInfo}</HelpBlock>\n                    </FormGroup>\n                </form>\n                <h3>Incomplete Tasks</h3>\n                {this.renderTodos(this.props.todos)}\n\n                <h3>Completed Tasks</h3>\n                {this.renderTodos(this.props.todos_completed, 'done')}\n\n            </div>\n        );\n    }\n}\n\nvar mapStateToProps = (state) => {\n    return {\n        ...state.todoActions\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      onTodoEnter: text => {\n        dispatch(addTodo(text))\n      },\n      onTaskRemove: (text, type) => {\n        dispatch(removeTodo({text, type}))\n      },\n      onTaskDone: text => {\n        dispatch(doneTodo(text))\n      }\n    }\n  }\n\n  \n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\n\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { error: null, errorInfo: null };\n    }\n    \n    componentDidCatch(error, errorInfo) {\n      // Catch errors in any components below and re-render with error message\n      this.setState({\n        error: error,\n        errorInfo: errorInfo\n      })\n      // You can also log error messages to an error reporting service here\n    }\n    \n    render() {\n      if (this.state.errorInfo) {\n        // Error path\n        return (\n          <div>\n            <h2>Something went wrong.</h2>\n            <details style={{ whiteSpace: 'pre-wrap' }}>\n              {this.state.error && this.state.error.toString()}\n              <br />\n              {this.state.errorInfo.componentStack}\n            </details>\n          </div>\n        );\n      }\n      // Normally, just render children\n      return this.props.children;\n    }  \n  }","import React, { Component } from 'react';\nimport Home from './pages/home';\nimport './css/common.css';\nimport ErrorBoundry from './components/error_boundry'\n\nclass App extends Component {\n  render() {\n    return (\n      <ErrorBoundry><Home/></ErrorBoundry>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport {ADD_TODO,REM_TODO, LIST_TODO, DONE_TODO} from './actions';\nconst initialState = {todos:[], task:'', todos_completed:[], error:false, errorInfo:''};\nfunction todoActions(state = initialState, action){\n    switch(action.type){\n        case ADD_TODO: \n            var newState = {...state};\n            if(action.payload == ''){\n                newState.error = true;\n                newState.errorInfo = 'Task is required field!!!';\n            }else if(newState.todos.indexOf(action.payload) == -1){\n                newState.todos = [...newState.todos,action.payload];\n                newState.error = false;\n                newState.errorInfo = 'Successfully Added';\n            }else{\n                newState.error = true;\n                newState.errorInfo = 'Task is already added!!!';\n            }\n            return newState;\n        break;\n\n        case REM_TODO: \n            var newState = {...state};\n            if(action.payload.type == 'done'){\n                newState.todos_completed = newState.todos_completed.filter(i => i != action.payload.text);\n            }else{\n                newState.todos = newState.todos.filter(i => i != action.payload.text);\n            }\n            \n            return newState;\n        break;\n\n        case DONE_TODO: \n            var newState = {...state};\n            newState.todos = newState.todos.filter(i => i != action.payload);\n            newState.todos_completed = [...newState.todos_completed,action.payload];\n            return newState;\n        break;\n\n        case LIST_TODO: \n            return state;\n        break;\n        default : {\n            return state;\n        }\n    }\n}\n\n\nvar todoApp = combineReducers({todoActions});\n\nexport default todoApp;","import React from 'react';\nimport {Provider} from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport todoApp from './data/reducers';\n\nconst store = createStore(todoApp);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}